name: Build Inviwo

on: 
  push:
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  #IVW_VCPKG_SHA: '66bac12e4e54cc858bdf7f93c5786010b6812b13'   # vcpkg "version" to use
  #IVW_VCPKG_SHA: '399458a9d9a763c0e06cc979464a17074fe8517d'  # nuget verbose version, git remote add inviwo https://github.com/inviwo/vcpkg.git
  VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'        # recognized by vcpkg
  # QT_DEBUG_PLUGINS: 1                                         # print qt plugin debug info

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-20.04]
        include:
          - os: 'windows-latest'
            triplet: 'x64-windows'
            mono: ''
            cmake: '-DIVW_MODULE_HDF5=ON'
            generator: 'Visual Studio 16 2019' 
         # - os: 'macos-latest'
         #   triplet: 'x64-osx'
         #   mono: 'mono'
         #   cmake: '-DIVW_MODULE_HDF5=OFF'
         #   generator: 'Ninja' 
         # - os: 'ubuntu-20.04'
         #   triplet: 'x64-linux'
         #   mono: 'mono'
         #   cmake: '-DIVW_USE_SIGAR=OFF -DIVW_MODULE_HDF5=OFF' 
         #   generator: 'Ninja' 
      fail-fast: false
      
    runs-on: ${{ matrix.os }}
    timeout-minutes: 360
    
    steps:  
    - uses: actions/checkout@v2
      with: 
        path: inviwo
        submodules: recursive
        
    - uses: actions/setup-python@v2
      with:
        python-version: '3.10'
        architecture: 'x64'
    
    - name: Install Numpy
      shell: bash
      run: pip3 install numpy
    
    - uses: actions/checkout@v2
      with:
        repository: 'microsoft/vcpkg'
        path: 'vcpkg' # The camke vcpkg present expects vcpkg to be next to the inviwo source folder
            
    - name: 'Setup NuGet Credentials'
      shell: bash
      run: >
        ${{ matrix.mono }} `vcpkg fetch nuget | tail -n 1`
        sources add
        -source "https://nuget.pkg.github.com/inviwo/index.json"
        -storepasswordincleartext
        -name "GitHub"
        -username "inviwo"
        -password "${{ secrets.GITHUB_TOKEN }}"

    - name: Apt Install
      shell: bash
      if: runner.os == 'Linux'
      run: |
        sudo apt install libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev libglew-dev ninja-build doxygen-latex
      
    - name: Brew Install
      shell: bash
      if: runner.os == 'macOS'
      run: |
        brew install ninja doxygen
        brew cask install basictex
        eval "$(/usr/libexec/path_helper)"
        echo "$(dirname $(which latex))" >> $GITHUB_PATH

    - name: Install Scoop
      if: runner.os == 'Windows'
      run: |
        Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
        scoop bucket add extras
        scoop install nsis doxygen latex
        echo "~/scoop/shims" >> $GITHUB_PATH
        echo "$(Split-Path -Path (Get-Command dvips).Path -Parent)" >> $GITHUB_PATH
      
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 6.2.2
        dir: ${{ github.workspace }}
                   
    - name: Configure CMake
      shell: bash
      run: >
        cmake -S inviwo -B build --preset=msvc-dev-vcpkg
        -DVCPKG_TARGET_TRIPLET='${{ matrix.triplet }}'
        -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
        -DIVW_DOXYGEN_PROJECT=ON
        ${{ matrix.cmake }}
    
    #-DPython_ROOT_DIR=${{ env.pythonLocation }}
    #-DPython3_ROOT_DIR=${{ env.pythonLocation }}
    
    - name: Setup C++
      uses: Trass3r/setup-cpp@v1
    
    - name: Build
      timeout-minutes: 180
      shell: bash
      run: cmake --build build --config ${{ env.BUILD_TYPE }} --parallel

    - name: Package
      if: runner.os == 'Windows'
      shell: bash
      run: cmake --build build --config ${{ env.BUILD_TYPE }} --parallel --target package 

    - name: Upload Windows
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v2
      with:
        name: inviwo-installer-win
        path: build/inviwo-v*.exe
   
    #- name: Upload macOS
    #  if: runner.os == 'macOS'
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: inviwo-installer-macos
    #    path: build/inviwo-v*.dmg

    #- name: Upload Linux
    #  if: runner.os == 'Linux'
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: inviwo-installer-ubuntu
    #    path: build/inviwo-v*.zip

    - name: Doxygen
      if: runner.os != 'Linux' # generate processor previews fails to load qt plugins
      shell: bash
      run: cmake --build build --config ${{ env.BUILD_TYPE }} --parallel --target DOXY-ALL 


